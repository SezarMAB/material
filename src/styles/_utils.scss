@use '@angular/material' as mat;
@use 'sass:map';
@use '../app/banner/banner.component.scss-theme' as banner;
@use '../app/app-theme.component.scss' as app-root;
@use './db-colors' as db-colors;

@function with-core-config($color-config){
  @return (
  color: $color-config,
    typography: mat.define-typography-config(
      $font-family: 'Poppins',
      $headline-6: mat.define-typography-level(21px, 23px, 700),
    ),
    density: -1
  )
}


@function patch-color-config($theme, $overriding-color) {
  @return map.deep-merge($theme, (
    color: $overriding-color
  ))
};


@mixin create-theme-bundle($theme-config) {
  @include mat.core-theme($theme-config);
  @include mat.card-theme($theme-config);
  @include mat.toolbar-theme($theme-config);
  @include mat.form-field-theme($theme-config);
  @include mat.select-theme($theme-config);
  @include mat.button-theme($theme-config);
  @include mat.icon-button-theme($theme-config);
  @include mat.icon-theme($theme-config);
  @include mat.divider-theme($theme-config);
  @include mat.typography-hierarchy($theme-config);

  //custom components theme
  @include banner.theme($theme-config);
  @include app-root.theme($theme-config);


  .purple-sub-theme {
    $purple-sub-theme: patch-color-config($theme-config, (
      primary: mat.define-palette(db-colors.$db-cool-gray, 700, 400,800),
      accent: mat.define-palette(mat.$pink-palette)
    ));
    @include mat.button-color($purple-sub-theme);
    @include banner.color($purple-sub-theme);
  }
}
