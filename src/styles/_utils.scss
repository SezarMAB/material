@use '@angular/material' as mat;
@use 'sass:map';
@use '../app/banner/banner.component.scss-theme' as banner;
@use '../app/app-theme.component.scss' as app-root;
@use './db-colors' as db-colors;
@use './themes/db-typography.scss' as db-typography;
@use '../app/them-test/them-test-theme.component.scss' as them-test-theme;
@use './themes/core.scss';

@function with-core-config($color-config){
  @return (
  color: $color-config,
    typography: db-typography.$db-web-typography,
    density: -1
  )
}
@include mat.typography-hierarchy(db-typography.$db-web-typography);

@function patch-color-config($theme, $overriding-color) {
  @return map.deep-merge($theme, (
    color: $overriding-color
  ))
};

@mixin create-theme-bundle($theme-config) {
  @include mat.core-theme($theme-config);

  //@include mat.card-theme($theme-config);
  //@include mat.toolbar-theme($theme-config);
  //@include mat.form-field-theme($theme-config);
  //@include mat.select-theme($theme-config);
  //@include mat.button-theme($theme-config);
  //@include mat.icon-button-theme($theme-config);
  //@include mat.icon-theme($theme-config);
  //@include mat.divider-theme($theme-config);
  //@include mat.typography-hierarchy($theme-config);
  @include mat.all-component-themes($theme-config);

  //custom components theme
  @include banner.theme($theme-config);
  @include app-root.theme($theme-config);
  @include them-test-theme.theme($theme-config);

  // core
  @include core.input-border-color($theme-config);

  .db-accent {
    $db-primary2: patch-color-config($theme-config, (
      primary: mat.define-palette(db-colors.$db-red),
      accent: mat.define-palette(db-colors.$db-cool-gray, A200, A100, A700),
      warn: mat.define-palette(db-colors.$db-yellow, A400, A100, A700),
    ));
    @include mat.button-color($db-primary2);
    @include banner.color($db-primary2);
  }
}


